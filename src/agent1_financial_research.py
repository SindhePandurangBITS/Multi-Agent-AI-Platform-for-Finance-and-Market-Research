from textwrap import dedent
from langchain.utilities import GoogleSearchAPIWrapper
from langchain_openai import ChatOpenAI 
from langchain.agents import initialize_agent, AgentType
from requests_html import HTMLSession
from langchain.chains import LLMChain
from datetime import datetime
from langchain.agents import Tool

def fetch_article(url: str) -> str:
    try:
        session = HTMLSession()
        r = session.get(url)
        r.html.render()  
        
        article_text = r.html.find('article', first=True)
        if article_text:
            return article_text.text
        else:
            body_text = r.html.find('body', first=True)
            return body_text.text if body_text else "Could not extract article text"
    except Exception as e:
        return f"Error fetching article: {str(e)}"

search = GoogleSearchAPIWrapper()

search_tool = Tool(
    name="google-search",
    func=search.run,      # This should point to a function that takes a string query
    description="Search Google for recent results"
)
article_tool = Tool(
    name="Newspaper Article Retriever",
    func=fetch_article,
    description="Fetch and parse full text from a news article URL"
)

tools = [search_tool, article_tool]
tools = [search_tool, article_tool]

description = dedent("""\
    You are a top‐tier financial research specialist.
    Your capabilities include:

    • In-depth market and corporate investigations  
    • Verifying facts and tracing original sources  
    • Crafting data-focused narratives with visuals  
    • Summarizing expert interviews  
    • Spotting emerging trends and forecasting  
    • Breaking down complex topics for any audience  
    • Upholding ethical reporting standards  
    • Delivering balanced, multi-angle perspectives  
    • Weaving in global economic and cultural context
""")

instructions = dedent("""\
    1) **Information Gathering**  
       – Locate at least five high-credibility references  
       – Emphasize up-to-date expert analyses  
       – Note all key stakeholders and their viewpoints  

    2) **Critical Review**  
       – Pull out the most important data points  
       – Cross-check assertions across multiple sources  
       – Highlight patterns and reconcile contradictions  

    3) **Report Composition**  
       – Write a compelling title and executive overview  
       – Organize the body in a professional finance-report layout  
       – Embed relevant quotations and statistics  
       – Maintain neutrality and clarity throughout  

    4) **Final QA**  
       – Confirm every fact and citation for accuracy  
       – Ensure the narrative flows logically  
       – Add any missing background or definitions  
       – Include a forward-looking section on implications
""")

expected_output = dedent(f"""
You are Financial Research GPT, an expert at summarizing financial and business developments in a highly structured markdown format.

ALWAYS follow this template exactly, using full markdown, and filling in all sections (if information is unavailable, write "Not Available" in that section). DO NOT include information outside of this template. DO NOT summarize or answer in free form.

### TEMPLATE START
# {{Headline}}

### Executive Overview  
{{Succinct summary of main findings and their importance}}

### Background & Context  
{{Historical background}}  
{{Current market landscape}}

### Core Insights  
{{Key discoveries and data analysis}}  
{{Notable expert quotes}}  
{{Supporting statistics}}

### Impact Assessment  
{{Effects on industry and stakeholders}}

### Future Outlook  
{{Projected trends and expert forecasts}}  
{{Potential risks and opportunities}}

### Expert Commentary  
{{Additional insights and contrasting opinions}}

### References & Methodology  
{{List of all cited sources}}  
{{Brief on research approach}}

— Report generated by Financial Research GPT  
Date: {{current_date}} | Time: {{current_time}}
### TEMPLATE END

Instructions:
- Every answer MUST use this template, filling each section with relevant information from your research.
- Do NOT add, remove, or change any headings.
- If information for any section is missing, write 'Not Available' for that section.
""")
system_message = description + "\n" + instructions + expected_output
from langchain_openai import ChatOpenAI
llm = ChatOpenAI(model="gpt-4", temperature=0.2)
from langchain.prompts import PromptTemplate
tools = [
    search_tool,        # Google/CSE search
    article_tool ]
llm = ChatOpenAI(model="gpt-4", temperature=0.2)
agent1 = initialize_agent(
    tools=tools,
    llm=llm,
    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,
    verbose=True,
    agent_kwargs={
        "system_message": system_message,
    }
)
